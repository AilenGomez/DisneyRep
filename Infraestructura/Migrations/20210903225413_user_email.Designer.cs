// <auto-generated />
using System;
using Infraestructura.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infraestructura.Migrations
{
    [DbContext(typeof(DisneyAppContext))]
    [Migration("20210903225413_user_email")]
    partial class user_email
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Infraestructura.Entities.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idGenero")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<int?>("idRodaje")
                        .HasColumnType("int")
                        .HasColumnName("idRodaje");

                    b.HasKey("Id");

                    b.HasIndex("idRodaje");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("Infraestructura.Entities.Personaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPersonaje")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Edad")
                        .HasColumnType("int")
                        .HasColumnName("edad");

                    b.Property<string>("Historia")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("historia");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("nombre")
                        .IsFixedLength(true);

                    b.Property<long?>("Peso")
                        .HasColumnType("bigint")
                        .HasColumnName("peso");

                    b.Property<int?>("idRodaje")
                        .HasColumnType("int")
                        .HasColumnName("idRodaje");

                    b.HasKey("Id");

                    b.HasIndex("idRodaje");

                    b.ToTable("Personaje");
                });

            modelBuilder.Entity("Infraestructura.Entities.Rodaje", b =>
                {
                    b.Property<int>("idRodaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRodaje")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Calificacion")
                        .HasColumnType("int")
                        .HasColumnName("calificacion");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("date")
                        .HasColumnName("fechaCreacion");

                    b.Property<string>("Titulo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("titulo");

                    b.Property<int?>("idPersonaje")
                        .HasColumnType("int")
                        .HasColumnName("idPersonaje");

                    b.HasKey("idRodaje");

                    b.HasIndex("idPersonaje");

                    b.ToTable("Rodaje");
                });

            modelBuilder.Entity("Infraestructura.Entities.Seguridad", b =>
                {
                    b.Property<int>("idUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUser")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("password");

                    b.Property<string>("User")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.HasKey("idUser");

                    b.ToTable("Segruidad");
                });

            modelBuilder.Entity("Infraestructura.Entities.Genero", b =>
                {
                    b.HasOne("Infraestructura.Entities.Rodaje", "Rodaje")
                        .WithMany("Generos")
                        .HasForeignKey("idRodaje")
                        .HasConstraintName("FK_Genero_Rodaje");

                    b.Navigation("Rodaje");
                });

            modelBuilder.Entity("Infraestructura.Entities.Personaje", b =>
                {
                    b.HasOne("Infraestructura.Entities.Rodaje", "Rodaje")
                        .WithMany("Personajes")
                        .HasForeignKey("idRodaje")
                        .HasConstraintName("FK_Personaje_Rodaje");

                    b.Navigation("Rodaje");
                });

            modelBuilder.Entity("Infraestructura.Entities.Rodaje", b =>
                {
                    b.HasOne("Infraestructura.Entities.Personaje", "Personaje")
                        .WithMany("Rodajes")
                        .HasForeignKey("idPersonaje")
                        .HasConstraintName("FK_Rodaje_Personaje");

                    b.Navigation("Personaje");
                });

            modelBuilder.Entity("Infraestructura.Entities.Personaje", b =>
                {
                    b.Navigation("Rodajes");
                });

            modelBuilder.Entity("Infraestructura.Entities.Rodaje", b =>
                {
                    b.Navigation("Generos");

                    b.Navigation("Personajes");
                });
#pragma warning restore 612, 618
        }
    }
}
